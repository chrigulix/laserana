## 
##  A "minimal" Reconstruction for uboone data
##
#include "geometry.fcl"
#include "reco_uboone_data_minimal.fcl"
#include "laserreco.fcl"

process_name: LaserHitReco

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "LaserHits.root" }
  Timing:                  {}
  RandomNumberGenerator:   {} #ART native random number generator
  @table::microboone_reco_minimal_services
  message: @local::standard_info
}
services.DetectorClocksService.InheritClockConfig: false
services.DatabaseUtil.ShouldConnect: false
services.DetPedestalService.DetPedestalRetrievalAlg.UseDB: true

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 filters:
  {
    LaserSpotter:
    {
      module_type:         "LaserSpotterTest"

      # Box definitions for both laser systems
      CenterTicks:           [5130, 5063]
      TickWidths:            [200, 200]
      WireBoxes:             [[0,100],[3400,3500]]

      # Filter criterias:
      MinHits:               10 # minimal amout of Wires with hit

      # Hit Finder Definitons (only Y Hit Finder is used)
      GenerateWireMap:         false
      UseROI:            false
      HitBoxSize:              10       #cm

      LaserRecoModuleLabel:       "daq"
      LaserDataMergerModuleLabel: "LaserDataMerger"
      LaserBeamInstanceLabel:     "LaserBeam"

      MinAllowedChannelStatus: 4

      # High amplitude threshold for high signal exceptions for all planes
      HighAmplThreshold:       1000

      # U-Plane hit thresholds
      UHitPeakThreshold:      -25.0
      UAmplitudeToWidthRatio:  1
      UHitWidthThreshold:      10

      # V-Plane hit thresholds
      VHitPeakThreshold:       10.0
      VAmplitudeToWidthRatio:  1.0
      VAmplitudeToRMSRatio:    2.0
      VHitWidthThreshold:      12
      VRMSThreshold:           4

      # Y-Plane hit thresholds
      YHitPeakThreshold:       10.0
      YAmplitudeToWidthRatio:  1.5
      YHitWidthThreshold:      6
    }
  }

 # define the producer and filter modules for this path, order matters,
 # filters reject all following items.  see lines starting physics.producers below
 reco: [ LaserSpotter ]

 # define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 # trigger_paths is a keyword and contains the paths that modify the art::event,
 # ie filters and producers
 trigger_paths: [reco]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_LaserHitFinder.root"
   #sam_ignore:  true
   dataTier:    "reconstructed-2d"
   outputCommands: ["keep *_*_*_*",  "drop raw::RawDigits_*_*_*", "drop raw::OpDetWaveforms_*_*_*", "drop raw::BeamInfo_*_*_*"]
   compressionLevel: 1
 }
}