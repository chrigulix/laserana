#include "services_microboone.fcl"
#include "caldata_microboone.fcl"
#include "calibration_microboone.fcl"

#include "hitfindermodules_microboone.fcl"
#include "cluster_microboone.fcl"
#include "cosmicremovalmodules.fcl"
#include "trackfindermodules_microboone.fcl"
#include "pandoramodules_microboone.fcl"
#include "wirecellmodules_microboone.fcl"

#include "merger.fcl"
#include "laserreco.fcl"
#include "truncator.fcl"
#include "gettracks.fcl"

process_name: LaserReco

services:
{
  TFileService:            { fileName: "Tracks-%04r-%03s.root" }
  message:                 @local::microboone_message_services_prod_debug
  TimeTracker:             {}
  MemoryTracker:           { ignoreTotal: 1 } # default is one
  RandomNumberGenerator:   {} #ART native random number generator
  channelstatusservice:    @local::microboone_channelstatus_service
  			   @table::microboone_services_reco
}

# Define the services

# Look at the input files
source:
{
  module_type: RootInput
  fileNames:  [ "data.root" ]
  maxEvents:   -1       # Number of events to create
}

outputs:{}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "LaserReco-Kalman-%04r-%04s.root"
   # sam_ignore:  true
   dataTier:    "reconstructed-2d"
   outputCommands: ["keep *_*_*_*",  "drop raw::RawDigits_*_*_*", "drop raw::OpDetWaveforms_*_*_*", "drop raw::BeamInfo_*_*_*"]
   compressionLevel: 1
 }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   # Filtering / Preprocessing
   digitfilter:                  @local::microboone_rawdigitfilter
   caldata:                      @local::microboone_calroi
   LaserDataMerger:              @local::LaserDataMerger

   Trunc:                        @local::truncator

   # hit-finder producers
   gaushit:                      @local::microboone_gaushitfinder
   laserhit:                     @local::LaserReco

   # track finding producers
   pandoraCosmic:                @local::microboone_pandora
   fuzzycluster:                 @local::microboone_fuzzycluster

   trajcluster:                    @local::microboone_trajcluster

   trackkalmanhit:                 @local::microboone_track3Dkalmanhit        # Track fit for fuzzy cluster
   trackkalmanhitcc:               @local::microboone_track3Dkalmanhit        # Track fit for Cluster Crawler (Track Maker)

  stitchkalmanhit:                @local::microboone_trackstitcher
  stitchkalmanhitcc:              @local::microboone_trackstitcher

  GetTracks:          @local::GetTracks

}

 filters:
 {
 }

 analyzers:
 {
 }
 # preprocess:   [digitfilter, caldata]
 # fuzzycluster: [fuzzycluster, trackkalmanhit, stitchkalmanhit]
 reco: [    Trunc,
            digitfilter,
            caldata,
            LaserDataMerger,
            laserhit,
            fuzzycluster,
            trackkalmanhit,
            stitchkalmanhit,
            GetTracks
       ]

 # end_path are things that do not modify art::Event, includes analyzers
 # and output modules. all items here can be run simultaneously
 stream1:   [ out1 ]
 end_paths: [ stream1 ]
}
# physics.producers.laserhit.LaserRecoModuleLabel: "truncator"
physics.producers.laserhit.LaserRecoModuleLabel: "daq"

physics.producers.GetTracks.TrackLabel: "stitchkalmanhit"

# physics.producers.laserhit.UseCalData: true
# physics.producers.laserhit.CalDataTag: "caldata"

# physics.producers.truncator.WindowSize: 6400

# ## Here, we overwrite ALL module labels with the ones defined above.

# services.ChannelStatusService.ChannelStatusProvider.UseDB:           false
# services.DetPedestalService.DetPedestalRetrievalAlg.UseDB:           false

# Adjust the window/offset for the reduced total frame size (9600 -> 6400 ticks)


# services.DetectorPropertiesService.NumberTimeSamples:                  6400
# services.DetectorPropertiesService.ReadOutWindowSize:                  6400
# services.DetectorPropertiesService.InheritNumberTimeSamples:           false
# services.DetectorClocksService.InheritClockConfig:                     false
# services.DetectorClocksService.TriggerOffsetTPC:                       -0.400e3
services.DetectorClocksService.TriggerOffsetTPC:                        -1.600e3

services.SignalShapingServiceMicroBooNE.FieldResponseFVersion:          [ "v3.1", "v3.1"]
services.SignalShapingServiceMicroBooNE.YZdependentResponse:            true
services.SignalShapingServiceMicroBooNE.datadrivenResponse:             true
services.SignalShapingServiceMicroBooNE.DefaultTemperature:             89
services.SignalShapingServiceMicroBooNE.IncludeMisconfiguredU:          true
services.SignalShapingServiceMicroBooNE.FilterWidthCorrectionFactor:    [ 1.0, 1.0, 1.0]


physics.producers.digitfilter.ProcessNoise:                            false
physics.producers.digitfilter.TruncateTicks:                           false
physics.producers.digitfilter.RMSRejectionCutHi:                       [1000., 1000., 1000.]

physics.producers.caldata.DigitModuleLabel:                            "digitfilter"
# physics.producers.caldata.DigitModuleLabel:                            "wcNoiseFilter"
physics.producers.caldata.Threshold:                                   [ 0, 0, 0]
physics.producers.caldata.NumSigma:                                    [ 9, 9, 9]
physics.producers.caldata.DodQdxCalib:                                 false

# Hit finder overrites:
physics.producers.gaushit.NumBinsToAverage:                            7
physics.producers.gaushit.MinSig:                                      [3.25, 3.25, 3.75] # [15., 15., 15.] #
physics.producers.gaushit.MinWidth:                                    [1.0, 1.0, 1.0]
physics.producers.gaushit.MaxMultiHit:                                 4
physics.producers.gaushit.TryNplus1Fits:                               false
physics.producers.gaushit.Chi2NDF:                                     50.

# Track finder overrites
physics.producers.pandoraCosmic.GeantModuleLabel:			           "laserhit"
physics.producers.pandoraCosmic.GeantModuleLabel:                      "largeant"
physics.producers.pandoraCosmic.ConfigFile:                            "PandoraSettings_MicroBooNE_Cosmic.xml"

physics.producers.fuzzycluster.HitsModuleLabel:                     "laserhit"
physics.producers.fuzzycluster.CalDataModuleLabel:                  "caldata"

physics.producers.trackkalmanhit.HitModuleLabel:                    "laserhiet"
physics.producers.trackkalmanhit.ClusterModuleLabel:                "fuzzycluster"

physics.producers.stitchkalmanhit.TrackModuleLabel:                 "trackkalmanhit"
physics.producers.stitchkalmanhit.SpptModuleLabel:                  "trackkalmanhit"

